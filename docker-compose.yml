version: "3.8"

services:
  app:
    build: .
    container_name: ${COMPOSE_PROJECT_NAME}
    ports:
      - "8003:8003" # Maps port 8003 from the container to port 8003 on the host
    environment:
      # Environment variables for the application
      - DB_HOST=${DB_HOST} # Database host, loaded from .env
      - DB_USER=${DB_USER} # Database user, loaded from .env
      - DB_PASSWORD=${DB_PASSWORD} # Database password, loaded from .env
      - DB_NAME=${DB_NAME} # Database name, loaded from .env
    depends_on:
      - mysql # Waits for the MySQL service to start
    networks:
      - app-network
    volumes:
      - .:/app # Mounts the local project directory into /app in the container

  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      # Environment variables for MySQL
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD} # Root password for MySQL, loaded from .env
      MYSQL_DATABASE: ${MYSQL_DATABASE} # Database name, loaded from .env
    ports:
      - "3306:3306" # Exposes MySQL on the host at port 3306
    networks:
      - app-network
      # TODO: Map the volume to another Docker container
    # volumes:
    #   - mysql_data:/var/lib/mysql # Persistent storage for MySQL data

networks:
  app-network:
    driver: bridge
# volumes:
#   mysql_data:
#     driver: local
